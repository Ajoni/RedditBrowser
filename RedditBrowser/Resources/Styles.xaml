<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:user="clr-namespace:UserControls;assembly=UserControls"
                    xmlns:local="clr-namespace:RedditBrowser.Resources"
                    xmlns:fa="http://schemas.fontawesome.io/icons/">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Converters.xaml"/>
        <ResourceDictionary Source="Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="5,1" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="VoteButtonStyle" TargetType="{x:Type Button}"  BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UpvotePathStyle" TargetType="{x:Type Path}" >
        <Setter Property="Fill" Value="{StaticResource Novote}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Liked}" Value="True">
                <Setter Property="Fill" Value="{StaticResource Upvote}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DownvotePathStyle" TargetType="{x:Type Path}">
        <Setter Property="Fill" Value="{StaticResource Novote}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Liked}" Value="False">
                <Setter Property="Fill" Value="{StaticResource Downvote}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="VoteTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource NovoteText}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Liked}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource Downvote}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Liked}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource Upvote}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LoginLogoutButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#0079D3" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="BorderBrush" Value="#0079D3"/>
    </Style>

  <Style x:Key="LinkTextStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Cursor" Value="Hand"/>
	<Setter Property="FontWeight" Value="Bold"/>
	<Style.Triggers>
	  <Trigger Property="IsMouseOver" Value="True">
		<Setter Property="TextDecorations" Value="Underline" />
	  </Trigger>
	</Style.Triggers>
  </Style>

  <!-- Heavens, it seems that fixing TreeViews requires a full replacement of TreeViewItem definition.
         May all goodness forgive me for just pasting this ball of mud. -->
    <Style TargetType="TreeViewItem"
       BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="HorizontalContentAlignment"
          Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press"  Name="Expander">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="UIElement.Focusable"  Value="false" />
                                        <Setter Property="FrameworkElement.Width"  Value="16" />
                                        <Setter Property="FrameworkElement.Height"  Value="16" />
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Padding="5,5,5,5"
                                                        Background="#00FFFFFF"
                                                        Width="16"
                                                        Height="16">
                                                        <Path Fill="#00FFFFFF"
                                                            Stroke="#FF989898"
                                                            Name="ExpandPath">
                                                            <Path.Data>
                                                                <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                            </Path.Data>
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="135"
                                               CenterX="3"
                                               CenterY="3" />
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver"
                                   Value="True">
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Stroke"
                                    Value="#FF1BBBFA" />
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Fill"
                                    Value="#00FFFFFF" />
                                                        </Trigger>
                                                        <Trigger Property="ToggleButton.IsChecked"
                                   Value="True">
                                                            <Setter TargetName="ExpandPath"
                                    Property="UIElement.RenderTransform">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180"
                                                 CenterX="3"
                                                 CenterY="3" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Fill"
                                    Value="#FF595959" />
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Stroke"
                                    Value="#FF262626" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Border x:Name="Bd"
                    HorizontalAlignment="Stretch"
                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                    Padding="{TemplateBinding Control.Padding}"
                    Background="{TemplateBinding Panel.Background}"
                    SnapsToDevicePixels="True"
                    Grid.Column="1">
                                <ContentPresenter x:Name="PART_Header"
                                Content="{TemplateBinding HeaderedContentControl.Header}"
                                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                            Grid.Column="1"
                            Grid.Row="1" />
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TreeViewItem.IsExpanded"
                   Value="False">
                            <Setter TargetName="ItemsHost"
                    Property="UIElement.Visibility"
                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems"
                   Value="False">
                            <Setter TargetName="Expander"
                    Property="UIElement.Visibility"
                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="TreeViewItem.IsSelected"
                   Value="True">
                            <Setter TargetName="Bd"
                    Property="Panel.Background"
                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TreeViewItem.IsSelected"
                         Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                         Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                    Property="Panel.Background"
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled"
                   Value="False">
                            <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>