<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RedditBrowser.Resources"
					xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
					xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
					xmlns:cmd="http://www.galasoft.ch/mvvmlight"
                    xmlns:r="clr-namespace:RedditSharp.Things;assembly=RedditSharp"
                    xmlns:vms="clr-namespace:RedditBrowser.ViewModel"
                    xmlns:pages="clr-namespace:RedditBrowser.Pages">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Converters.xaml"/>
        <ResourceDictionary Source="Styles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <DataTemplate x:Key="Post" >
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Button Grid.Row="0" x:Name="buttonUpVote" FontFamily="Segoe UI Symbol" Content="&#xE110;"/>
                <TextBlock Grid.Row="1" x:Name="textblockVotes" Text="{Binding Score}" VerticalAlignment="Center"/>
                <Button Grid.Row="2" x:Name="buttonDownVote" FontFamily="Segoe UI Symbol" Content="&#xE1FD;"/>
            </Grid>
            <Image Grid.Column="1" x:Name="imagePost" Source="{Binding Thumbnail}" MaxHeight="80" MaxWidth="100"  Margin="5,1"/>
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" x:Name="textblockTitle" Text="{Binding Title}" TextWrapping="Wrap"/>
                    <TextBlock Grid.Row="1" x:Name="textblockLink" Text="{Binding Url}" TextWrapping="Wrap" TextBlock.FontSize="12"/>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Posted by "/>
                    <TextBlock Grid.Column="1" x:Name="textblockPosterUsername" Text="{Binding Author.Name}"/>
                </Grid>
                <Grid Grid.Row="2">
                    <Button x:Name="buttonPostDetails" />
                </Grid>
            </Grid>
        </Grid>
    </DataTemplate>

    <HierarchicalDataTemplate x:Key="Comment" DataType="{x:Type r:Comment}" ItemsSource="{Binding Comments}">        
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Button Grid.Row="0" x:Name="buttonUpVote" FontFamily="Segoe UI Symbol" Content="&#xE110;"/>
                <!--<TextBlock Grid.Row="1" x:Name="textblockVotes" Text="{Binding Score}" VerticalAlignment="Center"/>-->
                <Button Grid.Row="2" x:Name="buttonDownVote" FontFamily="Segoe UI Symbol" Content="&#xE1FD;"/>
            </Grid>

            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <WrapPanel  Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal">
                    <TextBlock x:Name="textblockAuthorName" Text="{Binding AuthorName}" />
                    <TextBlock x:Name="textblockAuthorFlairText" Text="{Binding AuthorFlairText}" />
                    <TextBlock x:Name="textblockScore" Text="{Binding Score}" />
                    <TextBlock x:Name="textblockDate" Text="{Binding Created}" />
                </WrapPanel>
                <TextBlock Grid.Row="1" Text="{Binding Body}" TextWrapping="Wrap"/>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0"  x:Name="buttonReply" Content="Reply"/>
                </Grid>
            </Grid>
        </Grid>
    </HierarchicalDataTemplate>

    <DataTemplate DataType="{x:Type vms:ListVM}">
        <Grid x:Name="gridPosts" Margin="5, 0, 5, 5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ListBox Grid.Row="0" Grid.Column="0" x:Name="listboxPosts" ItemsSource="{Binding Posts}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter">
                                    <cmd:EventToCommand Command="{Binding ElementName=gridPosts, Path=DataContext.ItemHover}"
               CommandParameter="{Binding}" />
                                </i:EventTrigger>                                
                            </i:Interaction.Triggers>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" x:Name="buttonUpVote" FontFamily="Segoe UI Symbol" Content="&#xE110;"/>
                                <TextBlock Grid.Row="1" x:Name="textblockVotes" Text="{Binding Score}" VerticalAlignment="Center"/>
                                <Button Grid.Row="2" x:Name="buttonDownVote" FontFamily="Segoe UI Symbol" Content="&#xE1FD;"/>
                            </Grid>
                            <Image Grid.Column="1" x:Name="imagePost" Source="{Binding Thumbnail}" MaxHeight="80" MaxWidth="100"  Margin="5,1"/>
                            <Grid Grid.Column="2" Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <cmd:EventToCommand Command="{Binding ElementName=gridPosts, Path=DataContext.ItemClicked}"
                                                CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid Grid.Row="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" x:Name="textblockTitle" Text="{Binding Title}" TextWrapping="Wrap"/>
                                    <TextBlock Grid.Row="1" x:Name="textblockLink" Text="{Binding Url}" TextWrapping="Wrap" TextBlock.FontSize="12"/>
                                </Grid>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Posted by "/>
                                    <TextBlock Grid.Column="1" x:Name="textblockPosterUsername" Text="{Binding Author.Name}"/>
                                </Grid>
                            </Grid>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type vms:TopPanelVM}">
        <pages:TopPanelView />
    </DataTemplate>

    <DataTemplate DataType="{x:Type vms:PostVM}">
        <Grid Margin="5, 0, 5, 5">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Margin="0, 0, 5, 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" x:Name="buttonUpVote" FontFamily="Segoe UI Symbol" Content="&#xE110;"/>
                    <TextBlock Grid.Row="1" x:Name="textblockVotes" Text="{Binding Post.Score}" VerticalAlignment="Center"/>
                    <Button Grid.Row="2" x:Name="buttonDownVote" FontFamily="Segoe UI Symbol" Content="&#xE1FD;"/>
                </Grid>
                <WrapPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal">
                    <TextBlock x:Name="textblockSubredditName" Text="{Binding Post.Subreddit.Name}"/>
                    <TextBlock Text=" • Posted by "/>
                    <TextBlock x:Name="textblockPosterName" Text="{Binding Post.Author.Name}"/>
                    <TextBlock Text=" Date "/>
                    <TextBlock x:Name="textblockCreatedDate" Text="{Binding Post.Created}"/>
                    <!--TODO dodac date converted z DateTime.Now - Post.Created do np 4h ago-->
                </WrapPanel>
                <TextBlock Grid.Row="1" Grid.Column="1" x:Name="textblockTitle" Text="{Binding Post.Title}"
                    TextWrapping="Wrap"/>
                <Image Grid.Row="2" Grid.Column="1" x:Name="image" Source="{Binding Post.Url}"/>
            </Grid>
            <Grid Grid.Row="1" x:Name="gridComment" Margin="5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <xctk:WatermarkTextBox Grid.Row="0" Grid.ColumnSpan="2" x:Name="textBoxComment"
                        Watermark="What are your thoughts?" Text="{Binding Comment}" AcceptsReturn="True"
                        TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" MinHeight="80"/>
                <Button Grid.Row="1" Grid.Column="1" x:Name="buttonAddComment" Content="Comment"/>
            </Grid>
            <Grid Grid.Row="2" x:Name="gridComments">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <!--^sorting^-->
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TreeView Grid.Row="1" x:Name="listboxComments" ItemsSource="{Binding Post.Comments}"
                        ItemTemplate="{StaticResource Comment}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                        HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                    <!-- Make this TreeView not use a ScrollViewer. -->
                    <TreeView.Template>
                        <ControlTemplate TargetType="TreeView">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <ItemsPresenter/>
                            </Border>
                        </ControlTemplate>
                    </TreeView.Template>
                </TreeView>
            </Grid>
        </Grid>
    </DataTemplate>

  <DataTemplate DataType="{x:Type vms:LoginVM}">
	<xctk:WindowContainer>
	  <xctk:ChildWindow IsModal="True" WindowState="Open">
		<xctk:BusyIndicator IsBusy="{Binding Busy}">
		  <Grid>
			<Grid.RowDefinitions>
			  <RowDefinition Height="auto"/>
			  <RowDefinition Height="auto"/>
			</Grid.RowDefinitions>
			<xctk:WatermarkTextBox Grid.Row="0" Watermark="Username" Text="{Binding Username}"/>
			<xctk:WatermarkPasswordBox Grid.Row="1" Watermark="Password" Text="{Binding Password}"/>
		  </Grid>
		</xctk:BusyIndicator>
	  </xctk:ChildWindow>
	</xctk:WindowContainer>
  </DataTemplate>

    <!-- Heavens, it seems that fixing TreeViews requires a full replacement of TreeViewItem definition.
         May all goodness forgive me for just pasting this ball of mud. -->
    <Style TargetType="TreeViewItem"
       BasedOn="{StaticResource {x:Type TreeViewItem}}">
        <Setter Property="HorizontalContentAlignment"
          Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <ToggleButton IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                        ClickMode="Press"  Name="Expander">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="UIElement.Focusable"  Value="false" />
                                        <Setter Property="FrameworkElement.Width"  Value="16" />
                                        <Setter Property="FrameworkElement.Height"  Value="16" />
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border Padding="5,5,5,5"
                                                        Background="#00FFFFFF"
                                                        Width="16"
                                                        Height="16">
                                                        <Path Fill="#00FFFFFF"
                                                            Stroke="#FF989898"
                                                            Name="ExpandPath">
                                                            <Path.Data>
                                                                <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                            </Path.Data>
                                                            <Path.RenderTransform>
                                                                <RotateTransform Angle="135"
                                               CenterX="3"
                                               CenterY="3" />
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver"
                                   Value="True">
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Stroke"
                                    Value="#FF1BBBFA" />
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Fill"
                                    Value="#00FFFFFF" />
                                                        </Trigger>
                                                        <Trigger Property="ToggleButton.IsChecked"
                                   Value="True">
                                                            <Setter TargetName="ExpandPath"
                                    Property="UIElement.RenderTransform">
                                                                <Setter.Value>
                                                                    <RotateTransform Angle="180"
                                                 CenterX="3"
                                                 CenterY="3" />
                                                                </Setter.Value>
                                                            </Setter>
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Fill"
                                    Value="#FF595959" />
                                                            <Setter TargetName="ExpandPath"
                                    Property="Shape.Stroke"
                                    Value="#FF262626" />
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <Border x:Name="Bd"
                    HorizontalAlignment="Stretch"
                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                    Padding="{TemplateBinding Control.Padding}"
                    Background="{TemplateBinding Panel.Background}"
                    SnapsToDevicePixels="True"
                    Grid.Column="1">
                                <ContentPresenter x:Name="PART_Header"
                                Content="{TemplateBinding HeaderedContentControl.Header}"
                                ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                            Grid.Column="1"
                            Grid.Row="1" />
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TreeViewItem.IsExpanded"
                   Value="False">
                            <Setter TargetName="ItemsHost"
                    Property="UIElement.Visibility"
                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ItemsControl.HasItems"
                   Value="False">
                            <Setter TargetName="Expander"
                    Property="UIElement.Visibility"
                    Value="Hidden" />
                        </Trigger>
                        <Trigger Property="TreeViewItem.IsSelected"
                   Value="True">
                            <Setter TargetName="Bd"
                    Property="Panel.Background"
                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="TreeViewItem.IsSelected"
                         Value="True" />
                                <Condition Property="Selector.IsSelectionActive"
                         Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                    Property="Panel.Background"
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="UIElement.IsEnabled"
                   Value="False">
                            <Setter Property="TextElement.Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
    
    
    
    